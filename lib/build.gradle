/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'java'
    id 'edu.wpi.first.GradleRIO' version "2024.3.2"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

group = 'org.blackknightsrobotics'
version = '0.0.0-TEST'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url 'https://frcmaven.wpi.edu/artifactory/release/'
    }
}


dependencies {
    // Use JUnit Jupiter test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.mockito:mockito-inline:5.0.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3
    api wpi.java.vendor.java()
    api wpi.java.deps.wpilib()
    api 'org.slf4j:slf4j-api:2.0.16'
    api 'org.slf4j:slf4j-log4j12:2.0.16'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

test {
    useJUnitPlatform()
}

jar {
    archiveBaseName.set(rootProject.name)
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': rootProject.name,
                'Implementation-Version': project.version)
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveBaseName.set(rootProject.name)
    archiveClassifier.set("sources")
}

task javadocJar(type: Jar) {
    from javadoc
    archiveBaseName.set(rootProject.name)
    archiveClassifier.set("javadoc")
}



// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

